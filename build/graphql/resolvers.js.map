{"version":3,"sources":["../../src/graphql/resolvers.js"],"names":["pubsub","PubSub","RESTAURANTS","books","title","author","resolvers","Subscription","restaurants","subscribe","parent","args","context","info","asyncIterator","Query","getUsers","getDeliveriers","getRestaurants","publish","getRestaurantCategories","getMenus","getMenuCategories","Mutation","addUser","data","newUser","addDeliverier","doLogin","email","password","login","error","doLoginDeliveriers","updateUser","userID","filter","_id","update","$set","addRestaurant","restaurantImage","createReadStream","stream","url","newRestaurantInfo","newRestaurant","updateRestaurant","restaurantID","addRestaurantCategory","restaurantCategoryImage","newRestaurantCategoryInfo","newRCategory","updateRestaurantCategory","rCategoryID","addMenu","menuImage","newMenuInfo","newMenu","updateMenu","menuID","addMenuCategory","menuCategoryImage","newMenuCategoryInfo","newMCategory","updateMenuCategory","mCategoryID"],"mappings":"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","sourcesContent":["import { PubSub } from 'apollo-server';\r\n\r\nconst pubsub = new PubSub();\r\nconst RESTAURANTS = 'RESTAURANTS';\r\n\r\nimport {  \r\n   createUser, \r\n   getUsers, \r\n   updateUser, \r\n   doLoginAction \r\n  } from '../actions/userActions';\r\n\r\nimport { createDeliverier, getDeliveriers, doLoginDeliveriers } from '../actions/deliverierActions';\r\n\r\nimport { createRestaurant, getRestaurants, updateRestaurant } from '../actions/restaurantActions';\r\n\r\nimport { createRestaurantCategory, getRestaurantCategories, updateRestaurantCategory } from '../actions/rCategoriesActions';\r\n\r\nimport {\r\n   createMenuCategory,\r\n   getMenuCategories,\r\n   updateMenuCategory\r\n } from '../actions/mCategoriesActions';\r\n\r\nimport { createMenu, getMenus, updateMenu } from '../actions/menuActions';\r\n\r\nimport { storeUpload } from '../utils/uploader';\r\n\r\n \r\n const books = [\r\n   {\r\n     title: 'Harry Potter and the Chamber of Secrets',\r\n     author: 'J.K. Rowling'\r\n   },\r\n   {\r\n     title: 'Jurassic Park',\r\n     author: 'Michael Crichton'\r\n   }\r\n ];\r\n\r\n const resolvers = {\r\n   \r\n   Subscription: {\r\n      restaurants: {\r\n        subscribe: (parent, args, context, info) => pubsub.asyncIterator([RESTAURANTS])\r\n      }\r\n   },\r\n   Query: {\r\n     books: () => books,\r\n     getUsers: async (parent, args, context, info) => {\r\n       try {\r\n         return await getUsers();\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     getDeliveriers: async() => {\r\n        try {\r\n          return await getDeliveriers();\r\n        } catch (err) {\r\n          return err; \r\n        }\r\n     },\r\n     getRestaurants: async (parent, args, context, info) => {\r\n       try { \r\n         const restaurants = await getRestaurants();\r\n         pubsub.publish(RESTAURANTS, {restaurants: restaurants});\r\n         return restaurants;\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     getRestaurantCategories: async (parent, args, context, info) => {\r\n       try {\r\n         return await getRestaurantCategories();\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     getMenus: async (parent, args, context, info) => {\r\n       try {\r\n         return await getMenus();\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     getMenuCategories: async (parent, args, context, info) => {\r\n       try {\r\n         return await getMenuCategories();\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     }\r\n   },\r\n   Mutation: {\r\n     addUser: async (parent, args, context , info) => {\r\n       try {\r\n        const newUser = await createUser(args.data);\r\n        return newUser;\r\n\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n       \r\n     },\r\n     addDeliverier: async(parent, args, context, info) => {\r\n        try {\r\n          return await createDeliverier(args.data);\r\n        } catch (err) {\r\n          return err;\r\n        }\r\n     },\r\n    doLogin: async (parent, { email, password }, context, info) => {\r\n        try {\r\n          const login = await doLoginAction(email, password);\r\n          return login;\r\n        } catch (err) {\r\n          return error; \r\n      }\r\n    },\r\n    doLoginDeliveriers: async (parent, { email, password }, context, info) => {\r\n      try {\r\n          return await doLoginDeliveriers(email, password);\r\n        } catch (err) {\r\n          return error;\r\n        }\r\n    },\r\n     updateUser: async (parent, { data, userID }, context, info) => {\r\n       try {\r\n         const filter = { _id: userID };\r\n         const update = { $set: { ...data } };\r\n         return await updateUser(filter, update);\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     addRestaurant: async (parent, { data }, context , info) => {\r\n       try {\r\n          const { createReadStream } = await data.restaurantImage;\r\n          const stream = createReadStream();\r\n          const { url } = await storeUpload(stream);\r\n          const newRestaurantInfo = {\r\n            ...data,\r\n            restaurantImage: url\r\n          };\r\n\r\n        const newRestaurant = await createRestaurant(newRestaurantInfo);\r\n        return newRestaurant;\r\n\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     updateRestaurant: async (parent, { data, restaurantID }, context, info ) => {\r\n       try {\r\n         const filter = { _id: restaurantID };\r\n         const update = { $set: { ...data } };\r\n         return await updateRestaurant(filter, update);\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     addRestaurantCategory: async (parent, { data }, context, info) => {\r\n       try {\r\n         const { createReadStream } = await data.restaurantCategoryImage;\r\n         const stream = createReadStream();\r\n         const { url } = await storeUpload(stream);\r\n         const newRestaurantCategoryInfo = {\r\n           ...data,\r\n           restaurantCategoryImage: url\r\n         };\r\n\r\n         const newRCategory = await createRestaurantCategory(newRestaurantCategoryInfo);\r\n         return newRCategory;\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     updateRestaurantCategory: async (\r\n       parent,\r\n       { data, rCategoryID },\r\n       context,\r\n       info\r\n     ) => {\r\n       try {\r\n         const filter = { _id: rCategoryID };\r\n         const update = { $set: { ...data } };\r\n         return await updateRestaurantCategory(filter, update);\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     addMenu: async (parent, { data }, context, info) => {\r\n       try {\r\n         const { createReadStream } = await data.menuImage;\r\n         const stream = createReadStream();\r\n         const { url } = await storeUpload(stream);\r\n         const newMenuInfo = {\r\n           ...data,\r\n           menuImage: url\r\n         }\r\n\r\n         const newMenu = await createMenu(newMenuInfo);\r\n         return newMenu;\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     updateMenu: async (parent, { data, menuID }, context, info ) => {\r\n       try {\r\n         const filter = { _id: menuID };\r\n         const update = { $set: { ...data } };\r\n         return await updateMenu(filter, update);\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     addMenuCategory: async (parent, { data }, context, info) => {\r\n       try {\r\n        const { createReadStream } = await data.menuCategoryImage;\r\n        const stream = createReadStream();\r\n        const { url } = await storeUpload(stream);\r\n        const newMenuCategoryInfo = {\r\n          ...data,\r\n          menuCategoryImage: url\r\n        };\r\n\r\n         const newMCategory = await createMenuCategory(newMenuCategoryInfo);\r\n         return newMCategory;\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     },\r\n     updateMenuCategory: async (\r\n       parent,\r\n       { data, mCategoryID },\r\n       context,\r\n       info\r\n     ) => {\r\n       try {\r\n         const filter = { _id: mCategoryID };\r\n         const update = { $set: { ...data } };\r\n         return await updateMenuCategory(filter, update);\r\n       } catch (err) {\r\n         return err;\r\n       }\r\n     }\r\n   }\r\n };\r\n\r\n export default resolvers;\r\n"],"file":"resolvers.js"}