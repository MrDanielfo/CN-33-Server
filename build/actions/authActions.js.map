{"version":3,"sources":["../../src/actions/authActions.js"],"names":["JWT","require","SchemaDirectiveVisitor","AuthenticationError","AuthDirective","field","resolve","defaultFieldResolver","args","ctx","user","apply","getContext","req","token","headers","authorization","undefined","verify","SECRET","err","result","_id","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;;;;;AAHA;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;eAIwDA,OAAO,CAAC,uBAAD,C;IAAvDC,sB,YAAAA,sB;IAAwBC,mB,YAAAA,mB;;IAE1BC,a;;;;;;;;;;;;yCACmBC,K,EAAO;AAAA,2BACmBA,KADnB,CAChBC,OADgB;AAAA,UAChBA,OADgB,+BACNC,oBADM;AAExBF,MAAAA,KAAK,CAACC,OAAN;AAAA;AAAA;AAAA;AAAA,mCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAmBE,IAAnB;AAAmBA,kBAAAA,IAAnB;AAAA;;AACNC,gBAAAA,GADM,GACAD,IAAI,CAAC,CAAD,CADJ;;AAAA,qBAERC,GAAG,CAACC,IAFI;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGKJ,OAAO,CAACK,KAAR,CAAc,IAAd,EAAoBH,IAApB,CAHL;;AAAA;AAAA;;AAAA;AAAA,sBAKF,IAAIL,mBAAJ,CAAwB,2BAAxB,CALE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB;AAQH;;;EAXuBD,sB;;AAc5B,IAAMU,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AACxB,MAAI;AACA,QAAMC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAYC,aAA1B;AACA,QAAI,yBAAOF,KAAP,cAAwBG,SAAxB,0DAAwBA,SAAxB,EAAJ,EAAuC,OAAOJ,GAAP,CAFvC,CAGA;;AACA,WAAOb,GAAG,CAACkB,MAAJ,CAAWJ,KAAX,EAAkBK,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA0B,kBAAgBC,GAAhB,EAAqBC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACzBD,GADyB;AAAA;AAAA;AAAA;;AAAA,kDACbP,GADa;;AAAA;AAAA;AAAA;AAAA,uBAGN,2BAAS;AAAES,kBAAAA,GAAG,EAAED,MAAM,CAACC;AAAd,iBAAT,CAHM;;AAAA;AAGnBZ,gBAAAA,IAHmB;AAAA,oEAIbG,GAJa;AAIRH,kBAAAA,IAAI,EAAJA;AAJQ;;AAAA;AAAA;AAAA;AAAA,kDAMlBG,GANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA1B;;AAAA;AAAA;AAAA;AAAA,QAAP;AASH,GAbD,CAaE,OAAOO,GAAP,EAAY;AACV,WAAOP,GAAP;AACH;AACJ,CAjBD;;AAmBAU,MAAM,CAACC,OAAP,GAAiB;AACbZ,EAAAA,UAAU,EAAVA,UADa;AAEbR,EAAAA,aAAa,EAAbA;AAFa,CAAjB","sourcesContent":["// paquetes que necesitamos importar\r\nconst JWT = require('jsonwebtoken');\r\nimport { findUser  } from '../actions/userActions';\r\nimport { SECRET } from '../config/index';\r\n\r\nconst { SchemaDirectiveVisitor, AuthenticationError } = require('apollo-server-express');\r\n\r\nclass AuthDirective extends SchemaDirectiveVisitor {\r\n    visitFieldDefinition(field) {\r\n        const { resolve = defaultFieldResolver } = field;\r\n        field.resolve = async function (...args) {\r\n            const ctx = args[2];\r\n            if (ctx.user) {\r\n                return await resolve.apply(this, args);\r\n            } else {\r\n                throw new AuthenticationError(\"You need to be logged in.\");\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nconst getContext = (req) => {\r\n    try {\r\n        const token = req.headers.authorization;\r\n        if (typeof token === typeof undefined) return req;\r\n        // return JWT.verify(token, process.env.SECRET, async function (err, result) {\r\n        return JWT.verify(token, SECRET, async function (err, result) {\r\n            if (err) return req;\r\n            try {\r\n                const user = await findUser({ _id: result._id });\r\n                return { ...req, user };\r\n            } catch (error) {\r\n                return req;\r\n            }\r\n        });\r\n    } catch (err) {\r\n        return req;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    getContext,\r\n    AuthDirective,\r\n}"],"file":"authActions.js"}