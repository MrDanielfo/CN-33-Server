{"version":3,"sources":["../../../src/database/schemas/DeliverierSchema.js"],"names":["mongoose","require","Schema","DeliverierSchema","name","type","String","required","lastName","email","city","country","zipcode","Number","password","dateBirth","Date","vehicle","officialId","driverLicense","vehicleLicense","gender","timestamps","Types","ObjectId","prototype","valueOf","toString","pre","next","deliverier","bcrypt","genSalt","err","salt","hash","module","exports"],"mappings":";;;;AACA;;AADA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAGA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,IAAMC,gBAAgB,GAAG,IAAID,MAAJ,CACvB;AACEE,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADR;AAKEC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GALZ;AASEE,EAAAA,KAAK,EAAE;AACLJ,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GATT;AAaEG,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAbR;AAiBEI,EAAAA,OAAO,EAAE;AACPN,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAjBX;AAqBEK,EAAAA,OAAO,EAAE;AACPP,IAAAA,IAAI,EAAEQ,MADC;AAEPN,IAAAA,QAAQ,EAAE;AAFH,GArBX;AAyBEO,EAAAA,QAAQ,EAAE;AACRT,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF,GAzBZ;AA6BEQ,EAAAA,SAAS,EAAE;AACTV,IAAAA,IAAI,EAAEW,IADG;AAETT,IAAAA,QAAQ,EAAE;AAFD,GA7Bb;AAiCEU,EAAAA,OAAO,EAAE;AACPZ,IAAAA,IAAI,EAAEC,MADC;AAEP,YAAM,CAAC,WAAD,EAAc,aAAd,EAA6B,WAA7B;AAFC,GAjCX;AAqCEY,EAAAA,UAAU,EAAE;AACVb,IAAAA,IAAI,EAAEC,MADI;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GArCd;AAyCEY,EAAAA,aAAa,EAAE;AACbd,IAAAA,IAAI,EAAEC,MADO;AAEbC,IAAAA,QAAQ,EAAE;AAFG,GAzCjB;AA6CEa,EAAAA,cAAc,EAAE;AACdf,IAAAA,IAAI,EAAEC,MADQ;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GA7ClB;AAiDEc,EAAAA,MAAM,EAAE;AACNhB,IAAAA,IAAI,EAAEC,MADA;AAEN,YAAM,CAAC,QAAD,EAAW,OAAX;AAFA;AAjDV,CADuB,EAuDvB;AAAEgB,EAAAA,UAAU,EAAE;AAAd,CAvDuB,CAAzB;;AA0DAtB,QAAQ,CAACuB,KAAT,CAAeC,QAAf,CAAwBC,SAAxB,CAAkCC,OAAlC,GAA4C,YAAW;AACrD,SAAO,KAAKC,QAAL,EAAP;AACD,CAFD;;AAIAxB,gBAAgB,CAACyB,GAAjB,CAAqB,MAArB,EAA6B,UAAUC,IAAV,EAAgB;AAC3C,MAAIC,UAAU,GAAG,IAAjB;;AACAC,qBAAOC,OAAP,CAAe,EAAf,EAAmB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChCH,uBAAOI,IAAP,CAAYL,UAAU,CAAChB,QAAvB,EAAiCoB,IAAjC,EAAuC,UAACD,GAAD,EAAME,IAAN,EAAe;AACpD,UAAIF,GAAJ,EAAS,OAAOJ,IAAI,CAACI,GAAD,CAAX;AACTH,MAAAA,UAAU,CAAChB,QAAX,GAAsBqB,IAAtB;AACAN,MAAAA,IAAI;AACL,KAJD;AAKD,GAND;AAQD,CAVD;AAYAO,MAAM,CAACC,OAAP,GAAiBlC,gBAAjB","sourcesContent":["const mongoose = require('mongoose');\r\nimport bcrypt from 'bcrypt';\r\n\r\nconst Schema = mongoose.Schema;\r\n\r\nconst DeliverierSchema = new Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    lastName: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    city: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    country: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    zipcode: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    dateBirth: {\r\n      type: Date,\r\n      required: true\r\n    },\r\n    vehicle: {\r\n      type: String,\r\n      enum: ['AUTOMOVIL', 'MOTOCICLETA', 'BICICLETA']\r\n    },\r\n    officialId: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    driverLicense: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    vehicleLicense: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    gender: {\r\n      type: String,\r\n      enum: ['HOMBRE', 'MUJER']\r\n    }\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nmongoose.Types.ObjectId.prototype.valueOf = function() {\r\n  return this.toString();\r\n};\r\n\r\nDeliverierSchema.pre(\"save\", function (next) {\r\n  let deliverier = this;\r\n  bcrypt.genSalt(10, (err, salt) => {\r\n    bcrypt.hash(deliverier.password, salt, (err, hash) => {\r\n      if (err) return next(err);\r\n      deliverier.password = hash;\r\n      next();\r\n    })\r\n  })\r\n\r\n})\r\n\r\nmodule.exports = DeliverierSchema;\r\n"],"file":"DeliverierSchema.js"}